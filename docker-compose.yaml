version: '3.8'

networks:
  ecommerce-net:
  ecommerce-internal:
    internal: true

volumes:
  mysql_data:
  mongo_data:
  redis_data:
  grafana_data:

services:
  # --- GATEWAY ---
  api-gateway:
    build:
      context: ./api-gateway
      args: { PHP_ENV: development }
    volumes: [./api-gateway:/app]
    ports: ["8080:80"]
    environment:
      - APP_ENV=development
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - USER_SERVICE_URL=http://user-service
      - PRODUCT_SERVICE_URL=http://product-service
      - CART_SERVICE_URL=http://cart-service
      - ORDER_SERVICE_URL=http://order-service
      - PAYMENT_SERVICE_URL=http://payment-service
      - NOTIFICATION_SERVICE_URL=http://notification-service
    networks: [ecommerce-net, ecommerce-internal]
    depends_on:
      rabbitmq:
        condition: service_healthy
      user-service:
        condition: service_started
      product-service:
        condition: service_started
      cart-service:
        condition: service_started
      order-service:
        condition: service_started
      payment-service:
        condition: service_started
      notification-service:
        condition: service_started
      redis:
        condition: service_started

  # --- SERVIÃ‡OS PHP/LUMEN ---
  user-service: # MySQL
    build: { context: ./user-service }
    volumes: [./user-service:/app]
    ports: ["4000:80"]
    environment:
      - APP_ENV=development
      - DB_CONNECTION=mysql
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_DATABASE=users_db
      - DB_USERNAME=root
      - DB_PASSWORD=root
      - RABBITMQ_HOST=rabbitmq
      - JWT_SECRET=${JWT_SECRET}
    networks: [ecommerce-net, ecommerce-internal]
    depends_on:
      mysql:
        condition: service_started
      rabbitmq:
        condition: service_healthy

  user-service-worker:
    build: { context: ./user-service }
    volumes: [./user-service:/app]
    command: php /app/artisan rabbitmq:consume
    environment:
      - APP_ENV=development
      - DB_CONNECTION=mysql
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_DATABASE=users_db
      - DB_USERNAME=root
      - DB_PASSWORD=root
      - RABBITMQ_HOST=rabbitmq
      - JWT_SECRET=${JWT_SECRET}
    networks: [ecommerce-internal]
    depends_on:
      rabbitmq:
        condition: service_healthy
      mysql:
        condition: service_started
    restart: on-failure

  product-service: # MySQL
    build: { context: ./product-service }
    volumes: [./product-service:/app]
    ports: ["4001:80"]
    environment:
      - APP_ENV=development
      - DB_CONNECTION=mysql
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_DATABASE=products_db
      - DB_USERNAME=root
      - DB_PASSWORD=root
      - RABBITMQ_HOST=rabbitmq
      - JWT_SECRET=${JWT_SECRET}
    networks: [ecommerce-net, ecommerce-internal]
    depends_on:
        mysql:
            condition: service_started
        rabbitmq:
            condition: service_healthy

  product-service-worker:
    build: { context: ./product-service }
    volumes: [./product-service:/app]
    command: php /app/artisan rabbitmq:consume
    environment:
      - APP_ENV=development
      - DB_CONNECTION=mysql
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_DATABASE=products_db
      - DB_USERNAME=root
      - DB_PASSWORD=root
      - RABBITMQ_HOST=rabbitmq
      - JWT_SECRET=${JWT_SECRET}
    networks: [ecommerce-internal]
    depends_on:
      rabbitmq:
        condition: service_healthy
      mysql:
        condition: service_started
    restart: on-failure

  order-service:
    build: { context: ./order-service }
    volumes: [./order-service:/app]
    ports: ["4002:80"]
    environment:
      - APP_ENV=development
      - DB_CONNECTION=mysql
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_DATABASE=orders_db
      - DB_USERNAME=root
      - DB_PASSWORD=root
      - RABBITMQ_HOST=rabbitmq
      - JWT_SECRET=${JWT_SECRET}
    networks: [ecommerce-net, ecommerce-internal]
    depends_on:
      mysql:
        condition: service_started
      rabbitmq:
        condition: service_healthy

  order-service-worker:
    build: { context: ./order-service }
    volumes: [./order-service:/app]
    command: php /app/artisan rabbitmq:consume
    environment:
      - APP_ENV=development
      - DB_CONNECTION=mysql
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_DATABASE=orders_db
      - DB_USERNAME=root
      - DB_PASSWORD=root
      - RABBITMQ_HOST=rabbitmq
      - JWT_SECRET=${JWT_SECRET}
    networks: [ecommerce-internal]
    depends_on:
      rabbitmq:
        condition: service_healthy
      mysql:
        condition: service_started
    restart: on-failure

  cart-service:
    build: { context: ./cart-service }
    volumes: [./cart-service:/app]
    ports: ["4003:80"]
    environment:
      - APP_ENV=development
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - RABBITMQ_HOST=rabbitmq
      - JWT_SECRET=${JWT_SECRET}
    networks: [ecommerce-net, ecommerce-internal]
    depends_on:
      redis:
        condition: service_started
      rabbitmq:
        condition: service_healthy

  cart-service-worker:
    build: { context: ./cart-service }
    volumes: [./cart-service:/app]
    command: php /app/artisan rabbitmq:consume
    environment:
      - APP_ENV=development
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - RABBITMQ_HOST=rabbitmq
    networks: [ecommerce-internal]
    depends_on:
      rabbitmq: { condition: service_healthy }
      redis: { condition: service_started }
    restart: on-failure

  payment-service:
    build: { context: ./payment-service }
    volumes: [./payment-service:/app]
    ports: ["4005:80"]
    environment:
      - APP_ENV=development
      - DB_CONNECTION=mysql
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_DATABASE=payments_db
      - DB_USERNAME=root
      - DB_PASSWORD=root
      - RABBITMQ_HOST=rabbitmq
      - JWT_SECRET=${JWT_SECRET}
    networks: [ecommerce-net, ecommerce-internal]
    depends_on:
      mysql: { condition: service_started }
      rabbitmq: { condition: service_healthy }

  payment-service-worker:
    build: { context: ./payment-service }
    volumes: [./payment-service:/app]
    command: php /app/artisan rabbitmq:consume
    environment:
      - APP_ENV=development
      - DB_CONNECTION=mysql
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_DATABASE=payments_db
      - DB_USERNAME=root
      - DB_PASSWORD=root
      - RABBITMQ_HOST=rabbitmq
    networks: [ecommerce-internal]
    depends_on:
      rabbitmq: { condition: service_healthy }
      mysql: { condition: service_started }
    restart: on-failure

  notification-service:
    build: { context: ./notification-service }
    volumes: [./notification-service:/app]
    ports: ["4004:80"]
    environment:
      - APP_ENV=development
      - DB_CONNECTION=mysql
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_DATABASE=notifications_db
      - DB_USERNAME=root
      - DB_PASSWORD=root
      - RABBITMQ_HOST=rabbitmq
      - JWT_SECRET=${JWT_SECRET}
    networks: [ecommerce-net, ecommerce-internal]
    depends_on:
      mysql: { condition: service_started }
      rabbitmq: { condition: service_healthy }

  notification-service-worker:
    build: { context: ./notification-service }
    volumes: [./notification-service:/app]
    command: php /app/artisan rabbitmq:consume
    environment:
      - APP_ENV=development
      - DB_CONNECTION=mysql
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_DATABASE=notifications_db
      - DB_USERNAME=root
      - DB_PASSWORD=root
      - RABBITMQ_HOST=rabbitmq
    networks: [ecommerce-internal]
    depends_on:
      rabbitmq: { condition: service_healthy }
      mysql: { condition: service_started }
    restart: on-failure

  # --- BANCOS, CACHE, MENSAGERIA e MONITORAMENTO ---
  mysql:
    image: mysql:8.0
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=users_db
    volumes: ["mysql_data:/var/lib/mysql"]
    ports: ["3307:3306"]
    networks: [ecommerce-internal]

  mongodb:
    image: mongo:6.0
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=root
    volumes: ["mongo_data:/data/db"]
    networks: [ecommerce-internal]

  redis:
    image: redis:7-alpine
    volumes: ["redis_data:/data"]
    networks: [ecommerce-internal, ecommerce-net]

  rabbitmq:
    image: rabbitmq:3.11-management-alpine
    environment:
      - RABBITMQ_DEFAULT_USER=root
      - RABBITMQ_DEFAULT_PASS=root
    ports: ["5672:5672", "15672:15672"]
    networks: [ecommerce-internal]
    healthcheck:
        test: ["CMD", "rabbitmq-diagnostics", "ping"]
        interval: 30s
        timeout: 10s
        retries: 5

  prometheus:
    image: prom/prometheus:v2.47.2
    volumes:
      - ./monitoring/prometheus/prometheus.yaml:/etc/prometheus/prometheus.yaml
    command:
      - '--config.file=/etc/prometheus/prometheus.yaml'
      - '--web.enable-admin-api'
    ports:
      - "9090:9090"
    networks:
      - ecommerce-net

  grafana:
    image: grafana/grafana-oss:10.2.2
    ports:
      - "3001:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - ecommerce-net
    depends_on:
      - prometheus

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    environment:
      - PMA_HOST=mysql
      - PMA_USER=root
      - PMA_PASSWORD=root
      - PMA_ARBITRARY=0
    ports:
      - "8001:80"
    networks:
      - ecommerce-net
      - ecommerce-internal
    depends_on:
      - mysql